buildscript {
	ext {
		springBootVersion = '2.0.1.RELEASE'
	}
	repositories {
		mavenCentral()
	}
	dependencies {
		classpath("org.springframework.boot:spring-boot-gradle-plugin:${springBootVersion}")
	}
}

apply plugin: 'java'
apply plugin: 'eclipse'
apply plugin: 'org.springframework.boot'
apply plugin: 'io.spring.dependency-management'

group = 'com.example.commerce'
version = '0.0.1-SNAPSHOT'
sourceCompatibility = 9

repositories {
	mavenCentral()
}


dependencies {
	// health checks and metrics
	compile('org.springframework.boot:spring-boot-starter-actuator')
	
	// persistence
	compile('org.springframework.boot:spring-boot-starter-data-mongodb')
	
	// web mvc + mustache templating
	compile('org.springframework.boot:spring-boot-starter-web')
	compile('org.springframework.boot:spring-boot-starter-mustache')
	
	// messaging
	compile('org.springframework.kafka:spring-kafka')
	
	// start kafka and zookeeper if profile = dev
	compile('org.springframework.kafka:spring-kafka-test')
	compile('log4j:log4j:1.2.17') // dependency bug, force log4j version to 1.2.17
	
	// session management in mongodb
	compile('org.springframework.session:spring-session-data-mongodb')
	
	// https://mvnrepository.com/artifact/org.modelmapper/modelmapper
	compile group: 'org.modelmapper', name: 'modelmapper', version: '1.1.3'

	compileOnly('org.projectlombok:lombok')
	runtime('org.springframework.boot:spring-boot-devtools')
	testCompile('org.springframework.boot:spring-boot-starter-test')
	testCompile('de.flapdoodle.embed:de.flapdoodle.embed.mongo')
}
